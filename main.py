import asyncio
from config.configvalidator import ConfigValidator
from modules.uniswap import subscribe_to_pool, get_initial_prices
from utils.price_tracker import PriceTracker
from utils.logger import logger


async def main():
    try:
        logger.info("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞...\n")
        # –ó–∞–≥—Ä—É–∑–∫–∞ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤
        logger.info("‚öôÔ∏è –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤...\n")
        validator = ConfigValidator("config/settings.json")
        settings = await validator.validate_config()
        threshold = settings["threshold"]
        wss_url = settings["wss_url"]
        price_tracker = PriceTracker(threshold)
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω
        logger.info("üîç –ü–æ–ª—É—á–µ–Ω–∏–µ –Ω–∞—á–∞–ª—å–Ω—ã—Ö —Ü–µ–Ω —Ç–æ–∫–µ–Ω–æ–≤...\n")
        await get_initial_prices(price_tracker, wss_url)
        
        await asyncio.gather(
            subscribe_to_pool("USDT", price_tracker, wss_url),
            subscribe_to_pool("DAI", price_tracker, wss_url)
        )
    except Exception as e:
        import traceback
        logger.error(f"üõë –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {type(e).__name__} ‚Äî {e}")
        logger.error(traceback.format_exc())

if __name__ == "__main__":
    asyncio.run(main())

